import numpy as np
a=np.array([(1,2,3),(4,5,6)])
print(a)

output:
[[1 2 3]
 [4 5 6]]
 
a=np.array([1,2,3])
print(a)

output:
[1 2 3]

import sys
#memory occupied by list
s = range(1000)
print('memory occupied by List',sys.getsizeof(10)*len(s))
#memory occupied by numpy
d = np.arange(1000)
print('memory occupied by Numpy Array',d.size*d.itemsize)

output :
memory occupied by List 28000
memory occupied by Numpy Array 8000


import time
print(time.time())# unix epoch time
# how to convert in hh:mm:ss
# how to convert in y: m:d

output:
1611725326.343573

import time
#comparing speed of list and numpy array
size = 10000000
#checking list taken time
l1 = range(size)
l2 = range(size)
start = time.time()
result = [(x,y) for x,y in zip(l1,l2)]
print('Time taken by List:', time.time()-start)
#checking numpy array taken time
a1 = np.arange(size)
a2 = np.arange(size)
start2 = time.time()
result_numpy = a1+a2
print('Time taken by numpy:', time.time()-start2)

output: 
Time taken by List: 2.046297550201416
Time taken by numpy: 0.040662288665771484


np.arange(1,10,2)

output:
array([1, 3, 5, 7, 9])

# slicing
#most imprtant (below question)
# 2nd element from the zeroth and first index of the array
import numpy as np
a = np.array([(1,2,3,4),(3,4,5,6)])
print(a[0:, 2])

output:
[3 5]

import numpy as np
a = np.array([(8,9),(10,11),(12,13)])
print(a[0:2,1])

output:
[ 9 11]

#linspace()
#It has printed 10 values between 1 to 3
import numpy as np
a=np.linspace(1,3,10)
print(a)

output:
[1.         1.22222222 1.44444444 1.66666667 1.88888889 2.11111111
 2.33333333 2.55555556 2.77777778 3.        ]

import numpy as np
a= np.array([1,2,3])
print(a.min())
print(a.max())
print(a.sum())

output:
1
3
6

a = np.array([(8,9,10),(11,12,13)])
print(a)
b = a.reshape(6,1)
print(b)

output:
[[ 8  9 10]
 [11 12 13]]
[[ 8]
 [ 9]
 [10]
 [11]
 [12]
 [13]]

# ‘size’ and ‘shape’
# •find the size and shape of the array using ‘size’ and ‘shape’ function respectively.

a = np.array([(1,2,3,4,5,6)])
a1 = np.array([(1,2,3,3),(4,5,6,4)])
print(a1)
print(a1.size)
print(a1.shape)

output:
[[1 2 3 3]
 [4 5 6 4]]
8
(2, 4)

# dtype
# •find the data type of the elements that are stored in anarray. So, if you want to know the data type of a particular element, you can use‘dtype’ function which will print the datatypealong with the size.
import numpy as np
a = np.array([(1,2,3)])
print(a.dtype)

output:
int64

# itemsize
# •calculate the byte size of each element

a = np.array([(1,2,3)])
print(a.itemsize)
output:
8

# ndim
# Find the dimension of the array, whether it is a two-dimensional array or a single dimensional array
import numpy as np
a = np.array([(1,2,3),(4,5,6)])
print(a)
a1 = np.array([((1,2,3),(4,5,6)),((1,2,3),(4,5,6))])
print(a1)
print(a.ndim)
print(a1.ndim)

out[[1 2 3]
 [4 5 6]]
[[[1 2 3]
  [4 5 6]]

 [[1 2 3]
  [4 5 6]]]
2
3

put:



